#!/usr/bin/env python3

import hvac
import yaml
import sys
import os


class VaultSecret():
    def __init__(self, k8s_object, hclient):
        self.hclient = hclient
        self.name = k8s_object['metadata']['name']
        self.path = k8s_object['spec']['path']

        self._mount_point = self.path.split(os.path.sep)[0]
        self._secret_path = '/'.join(self.path.split(os.path.sep)[1:])
        self.vault_secret = hclient.secrets.kv.v2.read_secret_version(
            mount_point=self._mount_point,
            path=self._secret_path
        )

    def to_k8s_secret(self):
        return {
            "apiVersion": "v1",
            "kind": "Secret",
            "metadata": {
                "name": self.name,
            },
            "type": "Opaque",
            "stringData": self.vault_secret["data"]["data"]
        }


def main():
    configs = list(yaml.safe_load_all(sys.stdin))
    hclient = hvac.Client()
    for config in configs:
        if config['kind'] == 'VaultSecret':
            config = VaultSecret(config, hclient).to_k8s_secret()
        print(yaml.dump(config))
        print("---")


main()
